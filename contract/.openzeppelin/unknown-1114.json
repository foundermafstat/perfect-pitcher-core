{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xFe442AfE3571dFc30898a2edfCF0E1d2f291cF4A",
      "txHash": "0x23b9189f406ceb6ffee2363b49145c32a2e262d2494776d317b5dd0dcdf3aaf8",
      "kind": "uups"
    }
  ],
  "impls": {
    "d8aef3a87c98620d8d80e8a9bf1c8d49c58b4b22da290180652a9768c0785876": {
      "address": "0xDEb5813F5CceC266b4849eC9cCE9333C3cFFE52f",
      "txHash": "0xbefba2eadd5d67e6779bcfc70df3fe14238c2962af78e1573216f6d588d4673f",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "dexRouter",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDEXRouter)5066",
            "contract": "PerfectPitcherToken",
            "src": "contracts\\PerfectPitcherToken.sol:50"
          },
          {
            "label": "corePriceFeed",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(AggregatorV3Interface)4999",
            "contract": "PerfectPitcherToken",
            "src": "contracts\\PerfectPitcherToken.sol:50"
          },
          {
            "label": "usdtPriceFeed",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(AggregatorV3Interface)4999",
            "contract": "PerfectPitcherToken",
            "src": "contracts\\PerfectPitcherToken.sol:50"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "PerfectPitcherToken",
            "src": "contracts\\PerfectPitcherToken.sol:57"
          },
          {
            "label": "resourceLocks",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(ResourceLock)3520_storage))",
            "contract": "PerfectPitcherToken",
            "src": "contracts\\PerfectPitcherToken.sol:66"
          },
          {
            "label": "spendingAllowances",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PerfectPitcherToken",
            "src": "contracts\\PerfectPitcherToken.sol:68"
          },
          {
            "label": "pausedFunctions",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "PerfectPitcherToken",
            "src": "contracts\\PerfectPitcherToken.sol:69"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Config)3544_storage",
            "contract": "PerfectPitcherToken",
            "src": "contracts\\PerfectPitcherToken.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)296_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)491_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)555_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(AggregatorV3Interface)4999": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(IDEXRouter)5066": {
            "label": "contract IDEXRouter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_struct(ResourceLock)3520_storage))": {
            "label": "mapping(address => mapping(bytes32 => struct PerfectPitcherToken.ResourceLock))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(ResourceLock)3520_storage)": {
            "label": "mapping(bytes32 => struct PerfectPitcherToken.ResourceLock)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(Config)3544_storage": {
            "label": "struct PerfectPitcherToken.Config",
            "members": [
              {
                "label": "maxSpendingAmount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLockDuration",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "serviceCount",
                "type": "t_uint32",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "emergencyUnlockFee",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ResourceLock)3520_storage": {
            "label": "struct PerfectPitcherToken.ResourceLock",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "serviceId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
