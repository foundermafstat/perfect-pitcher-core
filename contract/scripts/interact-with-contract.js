// scripts/interact-with-contract.js - –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º
const { ethers } = require("hardhat");

// –ê–¥—Ä–µ—Å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –≤ Core Testnet2
const CONTRACT_ADDRESS = "0xFe442AfE3571dFc30898a2edfCF0E1d2f291cF4A";

async function main() {
    console.log("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Perfect Pitcher Token...");
    console.log("üìç –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞:", CONTRACT_ADDRESS);
    
    try {
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É
        const token = await ethers.getContractAt("PerfectPitcherToken", CONTRACT_ADDRESS);
        const signers = await ethers.getSigners();
        const admin = signers[0];
        
        console.log("üë§ –ê–¥–º–∏–Ω:", admin.address);
        console.log("üë§ –í—Å–µ–≥–æ signers:", signers.length);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        console.log("\nüìä –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ:");
        console.log("- –ù–∞–∑–≤–∞–Ω–∏–µ:", await token.name());
        console.log("- –°–∏–º–≤–æ–ª:", await token.symbol());
        console.log("- –û–±—â–∏–π supply:", ethers.formatEther(await token.totalSupply()), "PRFCT");
        console.log("- –ë–∞–ª–∞–Ω—Å –∞–¥–º–∏–Ω–∞:", ethers.formatEther(await token.balanceOf(admin.address)), "PRFCT");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏
        console.log("\nüîê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π:");
        const adminRole = await token.DEFAULT_ADMIN_ROLE();
        const operatorRole = await token.OPERATOR_ROLE();
        const serviceRole = await token.SERVICE_ROLE();
        
        console.log("- –ê–¥–º–∏–Ω –∏–º–µ–µ—Ç ADMIN_ROLE:", await token.hasRole(adminRole, admin.address));
        console.log("- –ê–¥–º–∏–Ω –∏–º–µ–µ—Ç OPERATOR_ROLE:", await token.hasRole(operatorRole, admin.address));
        console.log("- –ê–¥–º–∏–Ω –∏–º–µ–µ—Ç SERVICE_ROLE:", await token.hasRole(serviceRole, admin.address));
        
        // –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
        console.log("\nüéÆ –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:");
        console.log("1. –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é");
        console.log("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å spending allowance");
        console.log("3. –ü–æ—Ç—Ä–∞—Ç–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –Ω–∞ AI-—Å–µ—Ä–≤–∏—Å");
        console.log("4. –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏");
        console.log("5. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞—Ö");
        console.log("6. –°–∂–µ—á—å —Ç–æ–∫–µ–Ω—ã");
        console.log("7. –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é");
        console.log("8. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É");
        
        // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        await demonstrateFeatures(token, admin);
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É:", error.message);
        throw error;
    }
}

async function demonstrateFeatures(token, admin) {
    console.log("\nüéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:");
    
    try {
        // 1. –ü–µ—Ä–µ–≤–æ–¥ —Ç–æ–∫–µ–Ω–æ–≤ (—Å–∞–º–æ–º—É —Å–µ–±–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
        console.log("\n1Ô∏è‚É£ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–æ–∫–µ–Ω–æ–≤...");
        const transferAmount = ethers.parseEther("1000");
        const balanceBeforeTransfer = await token.balanceOf(admin.address);
        console.log(`üìä –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${ethers.formatEther(balanceBeforeTransfer)} PRFCT`);
        
        // 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ spending allowance –¥–ª—è —Å–µ–±—è
        console.log("\n2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ spending allowance...");
        const allowanceAmount = ethers.parseEther("500");
        await token.setSpendingAllowance(admin.address, allowanceAmount);
        const currentAllowance = await token.spendingAllowances(admin.address);
        console.log(`‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω allowance ${ethers.formatEther(currentAllowance)} PRFCT –¥–ª—è ${admin.address}`);
        
        // 3. –¢—Ä–∞—Ç–∞ –Ω–∞ AI-—Å–µ—Ä–≤–∏—Å
        console.log("\n3Ô∏è‚É£ –¢—Ä–∞—Ç–∞ –Ω–∞ AI-—Å–µ—Ä–≤–∏—Å...");
        const serviceId = ethers.keccak256(ethers.toUtf8Bytes("gpt4_generation"));
        const spendAmount = ethers.parseEther("25");
        
        const balanceBefore = await token.balanceOf(admin.address);
        await token.spendOnService(admin.address, spendAmount, serviceId);
        const balanceAfter = await token.balanceOf(admin.address);
        
        console.log(`‚úÖ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ ${ethers.formatEther(spendAmount)} PRFCT –Ω–∞ AI-—Å–µ—Ä–≤–∏—Å`);
        console.log(`üìä –ë–∞–ª–∞–Ω—Å: ${ethers.formatEther(balanceBefore)} ‚Üí ${ethers.formatEther(balanceAfter)} PRFCT`);
        
        // 4. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
        console.log("\n4Ô∏è‚É£ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...");
        const lockAmount = ethers.parseEther("100");
        const lockDuration = 1800; // 30 –º–∏–Ω—É—Ç
        const broadcastId = ethers.keccak256(ethers.toUtf8Bytes("live_stream_001"));
        
        const tx = await token.lockResourcesForBroadcast(lockAmount, lockDuration, broadcastId);
        const receipt = await tx.wait();
        
        // –ü–æ–ª—É—á–∞–µ–º lockId –∏–∑ —Å–æ–±—ã—Ç–∏—è
        let lockId;
        for (const log of receipt.logs) {
            try {
                const parsed = token.interface.parseLog(log);
                if (parsed.name === "ResourcesLocked") {
                    lockId = parsed.args.lockId;
                    break;
                }
            } catch (e) {}
        }
        
        if (lockId) {
            console.log(`‚úÖ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ ${ethers.formatEther(lockAmount)} PRFCT`);
            console.log(`üîë Lock ID: ${lockId}`);
            
            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
            const lockInfo = await token.getLockInfo(admin.address, lockId);
            console.log(`üìã –í—Ä–µ–º—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${new Date(Number(lockInfo.unlockTime) * 1000).toLocaleString()}`);
        }
        
        // 5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        console.log("\nüìä –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:");
        const finalBalance = await token.balanceOf(admin.address);
        const totalSupply = await token.totalSupply();
        const contractBalance = await token.balanceOf(await token.getAddress());
        
        console.log(`- –ë–∞–ª–∞–Ω—Å –∞–¥–º–∏–Ω–∞: ${ethers.formatEther(finalBalance)} PRFCT`);
        console.log(`- –û–±—â–∏–π supply: ${ethers.formatEther(totalSupply)} PRFCT`);
        console.log(`- –ë–∞–ª–∞–Ω—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: ${ethers.formatEther(contractBalance)} PRFCT`);
        
        console.log("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!");
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:", error.message);
    }
}

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
async function quickTransfer(to, amount) {
    const token = await ethers.getContractAt("PerfectPitcherToken", CONTRACT_ADDRESS);
    await token.transfer(to, ethers.parseEther(amount.toString()));
    console.log(`‚úÖ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ ${amount} PRFCT ‚Üí ${to}`);
}

async function quickAllowance(user, amount) {
    const token = await ethers.getContractAt("PerfectPitcherToken", CONTRACT_ADDRESS);
    await token.setSpendingAllowance(user, ethers.parseEther(amount.toString()));
    console.log(`‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω allowance ${amount} PRFCT –¥–ª—è ${user}`);
}

async function quickBurn(amount) {
    const token = await ethers.getContractAt("PerfectPitcherToken", CONTRACT_ADDRESS);
    await token.burn(ethers.parseEther(amount.toString()));
    console.log(`‚úÖ –°–æ–∂–∂–µ–Ω–æ ${amount} PRFCT`);
}

async function getBalance(address) {
    const token = await ethers.getContractAt("PerfectPitcherToken", CONTRACT_ADDRESS);
    const balance = await token.balanceOf(address);
    console.log(`üí∞ –ë–∞–ª–∞–Ω—Å ${address}: ${ethers.formatEther(balance)} PRFCT`);
    return balance;
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
module.exports = {
    CONTRACT_ADDRESS,
    quickTransfer,
    quickAllowance,
    quickBurn,
    getBalance,
    main
};

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–∑–æ–≤–µ
if (require.main === module) {
    main()
        .then(() => process.exit(0))
        .catch((error) => {
            console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
            process.exit(1);
        });
}
