// scripts/simple-stats.js - –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
const { ethers } = require("hardhat");

const CONTRACT_ADDRESS = "0xFe442AfE3571dFc30898a2edfCF0E1d2f291cF4A";

async function main() {
    console.log("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Perfect Pitcher Token");
    console.log("‚ïê".repeat(50));
    
    try {
        const token = await ethers.getContractAt("PerfectPitcherToken", CONTRACT_ADDRESS);
        const [deployer] = await ethers.getSigners();
        
        // –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        console.log("üìç –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞:", CONTRACT_ADDRESS);
        console.log("üë§ –ö–æ—à–µ–ª–µ–∫:", deployer.address);
        console.log("üïí –í—Ä–µ–º—è:", new Date().toLocaleString());
        
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–µ
        console.log("\nüí∞ –¢–û–ö–ï–ù:");
        const name = await token.name();
        const symbol = await token.symbol();
        const decimals = await token.decimals();
        const totalSupply = await token.totalSupply();
        
        console.log(`üìõ –ù–∞–∑–≤–∞–Ω–∏–µ: ${name}`);
        console.log(`üî§ –°–∏–º–≤–æ–ª: ${symbol}`);
        console.log(`üî¢ –î–µ—Å—è—Ç–∏—á–Ω—ã–µ: ${decimals}`);
        console.log(`üí∞ Total Supply: ${ethers.formatEther(totalSupply)} ${symbol}`);
        
        // –ë–∞–ª–∞–Ω—Å –¥–µ–ø–ª–æ–π–µ—Ä–∞
        const deployerBalance = await token.balanceOf(deployer.address);
        console.log(`üè¶ –ë–∞–ª–∞–Ω—Å –¥–µ–ø–ª–æ–π–µ—Ä–∞: ${ethers.formatEther(deployerBalance)} ${symbol}`);
        
        // –ë–∞–ª–∞–Ω—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
        const contractBalance = await token.balanceOf(CONTRACT_ADDRESS);
        console.log(`üì¶ –ë–∞–ª–∞–Ω—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: ${ethers.formatEther(contractBalance)} ${symbol}`);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π
        console.log("\nüîê –†–û–õ–ò:");
        try {
            const adminRole = await token.DEFAULT_ADMIN_ROLE();
            const operatorRole = await token.OPERATOR_ROLE();
            const serviceRole = await token.SERVICE_ROLE();
            
            const hasAdmin = await token.hasRole(adminRole, deployer.address);
            const hasOperator = await token.hasRole(operatorRole, deployer.address);
            const hasService = await token.hasRole(serviceRole, deployer.address);
            
            console.log(`üëë ADMIN_ROLE: ${hasAdmin ? "‚úÖ" : "‚ùå"}`);
            console.log(`‚öôÔ∏è  OPERATOR_ROLE: ${hasOperator ? "‚úÖ" : "‚ùå"}`);
            console.log(`üîß SERVICE_ROLE: ${hasService ? "‚úÖ" : "‚ùå"}`);
        } catch (error) {
            console.log("‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π:", error.message);
        }
        
        // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        console.log("\n‚öôÔ∏è  –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:");
        try {
            const config = await token.config();
            console.log(`üí∏ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç—Ä–∞—Ç–∞: ${ethers.formatEther(config.maxSpendingAmount)} ${symbol}`);
            console.log(`‚è∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞: ${config.maxLockDuration} —Å–µ–∫ (${Math.floor(config.maxLockDuration / 86400)} –¥–Ω–µ–π)`);
            console.log(`üö® Emergency –∫–æ–º–∏—Å—Å–∏—è: ${Number(config.emergencyUnlockFee) / 100}%`);
        } catch (error) {
            console.log("‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:", error.message);
        }
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
        console.log("\nüìä –°–û–°–¢–û–Ø–ù–ò–ï:");
        try {
            const isPaused = await token.paused();
            console.log(`‚è∏Ô∏è  –ü–∞—É–∑–∞: ${isPaused ? "–í–∫–ª—é—á–µ–Ω–∞" : "–í—ã–∫–ª—é—á–µ–Ω–∞"}`);
        } catch (error) {
            console.log("‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—É–∑—ã:", error.message);
        }
        
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏
        console.log("\nüåê –°–ï–¢–¨:");
        const blockNumber = await ethers.provider.getBlockNumber();
        const network = await ethers.provider.getNetwork();
        
        console.log(`üì¶ –¢–µ–∫—É—â–∏–π –±–ª–æ–∫: ${blockNumber}`);
        console.log(`üîó Chain ID: ${network.chainId}`);
        console.log(`üåç Network: ${network.name || "Unknown"}`);
        
        // –°—Å—ã–ª–∫–∏
        console.log("\nüîó –°–°–´–õ–ö–ò:");
        console.log(`üåê Explorer: https://scan.test2.btcs.network/address/${CONTRACT_ADDRESS}`);
        console.log(`üíß Faucet: https://scan.test2.btcs.network/faucet`);
        
        // –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        console.log("\nüß™ –î–û–°–¢–£–ü–ù–´–ï –§–£–ù–ö–¶–ò–ò:");
        console.log("1. üí∏ transfer() - –ü–µ—Ä–µ–≤–æ–¥ —Ç–æ–∫–µ–Ω–æ–≤");
        console.log("2. üî• burn() - –°–∂–∏–≥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤");
        console.log("3. üí≥ setSpendingAllowance() - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ —Ç—Ä–∞—Ç");
        console.log("4. ü§ñ spendOnService() - –¢—Ä–∞—Ç–∞ –Ω–∞ AI-—Å–µ—Ä–≤–∏—Å—ã");
        console.log("5. üîí lockResourcesForBroadcast() - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–ª—è —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–π");
        console.log("6. üö® emergencyUnlock() - –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞");
        
        console.log("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!");
        console.log("üí° –î–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è: npm run interact");
        console.log("üì° –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–±—ã—Ç–∏–π: npm run monitor");
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:", error.message);
        throw error;
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–∑–æ–≤–µ
if (require.main === module) {
    main()
        .then(() => process.exit(0))
        .catch((error) => {
            console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
            process.exit(1);
        });
}

module.exports = { main };

